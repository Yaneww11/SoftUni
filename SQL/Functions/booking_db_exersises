-- Arithmetical Operators
CREATE TABLE 
	bookings_calculation
AS
SELECT
	booked_for,
	CAST(booked_for * 50 AS NUMERIC) AS multiplication,
	CAST(booked_for % 50 AS NUMERIC) AS modulo
FROM
	bookings
WHERE
	bookings.apartment_id = 93;

-- ROUND vs TRUNC
SELECT 
	latitude,
	ROUND(latitude, 2),
	TRUNC(latitude, 2)
FROM apartments;

-- Absolute Value
SELECT 
	longitude,
	ABS(longitude)
FROM apartments;

-- format Data
ALTER TABLE 
	bookings
ADD COLUMN 
	billing_day TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP;


SELECT 
	TO_CHAR(billing_day, 'DD "Day" MM "Month" YYYY "Year" HH24:MI:SS') 
	AS "Billing Day"
FROM 
	bookings
;

-- EXTRACT Data
SELECT
	EXTRACT(YEAR FROM booked_at) AS YEAR,
	EXTRACT(MONTH FROM booked_at) AS MONTH,
	EXTRACT(DAY FROM booked_at) AS DAY,
	EXTRACT(HOUR FROM booked_at AT TIME ZONE 'UTC') AS HOUR,
	EXTRACT(MINUTE FROM booked_at) AS MINUTE,
	CEILING(EXTRACT(SECOND FROM booked_at)) AS SECOND
FROM
	bookings;

-- Subtract data
SELECT
	user_id,
	AGE(starts_at, booked_at) AS "early_birds"
FROM
	bookings
WHERE
	starts_at - booked_at >= INTERVAL '10 MONTHS'
;

-- Use Like
SELECT
	companion_full_name,
	email
FROM
	users
WHERE
	companion_full_name ILIKE '%aNd%' -- Valid is: and, And, ANd, ...
		AND
	email NOT LIKE '%@gmail'
;

-- COUNT by Initial
SELECT
	LEFT(first_name, 2) AS initials,
	COUNT('initials') AS user_count
FROM
	users
GROUP BY 
	initials
ORDER BY 
	user_count DESC,
	initials
;

-- SUM
SELECT
	SUM(booked_for) AS initials
FROM
	bookings
WHERE
	apartment_id = 90;
;
